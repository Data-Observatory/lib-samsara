[build-system]
requires = ["setuptools>=30.3.0", "setuptools_scm>=3.3.1"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"
src_paths = ["src", "tests", "*.py"]
line_length = 88
multi_line_output = 3
split_on_trailing_comma = true
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
forced_separate = ["conftest"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.ruff]
extend-exclude = ["static", "ci/templates"]
line-length = 88
src = ["src", "tests"]
target-version = "py39"

[tool.ruff.lint]
ignore = [
  "RUF001", # ruff-specific rules ambiguous-unicode-character-string
  "S101",   # flake8-bandit assert
  "S308",   # flake8-bandit suspicious-mark-safe-usage
  "E501",   # pycodestyle line-too-long
  "E203",   # Colons should not have any space before them
]
select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle errors
  "EXE", # flake8-executable
  "F",   # pyflakes
  "INT", # flake8-gettext
  "PIE", # flake8-pie
  "PLC", # pylint convention
  "PLE", # pylint errors
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RUF", # ruff-specific rules
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
]

[tool.ruff.lint.per-file-ignores]
"ci/*" = ["S"]
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
